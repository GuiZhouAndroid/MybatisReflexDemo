<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dhrj.zs.mapper.StudentMapper">

    <sql id="allColumns">
        id, name, email, age
    </sql>
    <select id="getAll" resultType="student">
        select <include refid="allColumns"/> from student
    </select>

    <select id="selectById" resultType="student">
        select <include refid="allColumns"/> from student where id = #{id}
    </select>

    <select id="selectByLikeName" resultType="student">
        select <include refid="allColumns"/> from student where name like '%${lineName}%'
    </select>

    <select id="selectByLikeNameGood" resultType="student">
        select <include refid="allColumns"/> from Student where name like concat('%',#{name},'%')
    </select>

    <select id="selectByLikeColumOrValueGood" resultType="student">
        select <include refid="allColumns"/> from student where ${column} like concat('%',#{value},'%')
    </select>

    <insert id="addStudent">
        insert into Student(name, email, age) values (#{name},#{email},#{age})
    </insert>

    <insert id="addStudentBackId">
        <selectKey keyProperty="id" resultType="int" order="AFTER">
            select last_insert_id()
        </selectKey>
        insert into Student(name, email, age) values (#{name},#{email},#{age})
    </insert>

    <delete id="deleteById">
        delete from Student where id =#{id}
    </delete>

    <update id="updateStudent">
        update Student set name = #{name},email = #{email},age = #{age} where id = #{id}
    </update>

    <!--    动态SQL
        SQL条件：根据实体类中的成员变量是否有值来决定是否添加条件
    -->
    <select id="getByConditions" resultType="student">
        select <include refid="allColumns"/>
        from Student
        <where>
            <if test="name !=null and name!= ''">
                and name like concat('%',#{name},'%')
            </if>
            <if test="email !=null and email!= ''">
                and email = #{email}
            </if>
            <if test="age !=null">
                and age = #{age}
            </if>
        </where>
    </select>

    <update id="updateStudentBySet">
        update Student
        <set>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="age != null">
                age = #{age},
            </if>
        </set>
            where id =#{id}
    </update>

    <!--
        collection = list、map、array
        item：循环临时变量
        separator：item之间分隔符
        open：循环外前括号
        close：循环外后括号
    -->
    <select id="getUserInfoByIds" resultType="student">
        select
        <include refid="allColumns"/>
        from Student
        where
        id in
        <foreach collection="array" item="varId" separator="," open="(" close=")">
            #{varId}
        </foreach>

    </select>

    <delete id="deleteBatchInfoByIds">
        delete from Student where id in
        <foreach collection="array" item="varIds" separator="," open="(" close=")">
            #{varIds}
        </foreach>
    </delete>

    <insert id="addBatchStudent">
        insert into Student(name, email, age)
        values
        <foreach collection="list" item="varStudent" separator=",">
            (#{varStudent.name},#{varStudent.email},#{varStudent.age})
        </foreach>
    </insert>

    <update id="updateBatchStudentBySet">
        <foreach collection="list" item="u" separator=";">
            update Student
            <set>
                <if test="u.name != null">
                    name = #{u.name},
                </if>
                <if test="u.email != null">
                    email = #{u.email},
                </if>
                <if test="u.age != null">
                    age = #{u.age}
                </if>
            </set>
            where id =#{u.id}
        </foreach>
    </update>

</mapper>